manifests should match snapshot:
  1: |
    apiVersion: kyverno.io/v1
    kind: ClusterPolicy
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: Replace=true
        policies.kyverno.io/category: gitops
        policies.kyverno.io/minversion: 1.13.0
        policies.kyverno.io/subject: Generate application gitops resources
        policies.kyverno.io/title: Generate ArgoCD appproject, serviceaccount and rolebinding
      labels:
        app.kubernetes.io/instance: application-gitops
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: application-gitops
        helm.sh/chart: application-gitops-1.4.0
      name: application-gitops
    spec:
      background: true
      rules:
        - generate:
            apiVersion: argoproj.io/v1alpha1
            data:
              spec:
                clusterResourceWhitelist: []
                description: '{{ request.object.metadata.namespace }} namespace project'
                destinationServiceAccounts:
                  - defaultServiceAccount: application-gitops
                    namespace: '{{ request.object.metadata.namespace }}'
                    server: https://kubernetes.default.svc
                destinations:
                  - namespace: '{{ request.object.metadata.namespace }}'
                    server: https://kubernetes.default.svc
                orphanedResources:
                  warn: false
                roles:
                  - description: '{{ request.object.metadata.namespace }} project admin access'
                    groups:
                      - APC-D-{{ to_upper(request.object.metadata.namespace) }}-PJA
                    name: admin
                    policies:
                      - p, proj:{{ request.object.metadata.namespace }}:admin, repositories, *, {{ request.object.metadata.namespace }}/https://gitlab.example.com/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:admin, applications, *, {{ request.object.metadata.namespace }}/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:admin, clusters, get, https://kubernetes.default.svc, allow
                      - p, proj:{{ request.object.metadata.namespace }}:admin, exec, create, {{ request.object.metadata.namespace }}/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:admin, logs, get, {{ request.object.metadata.namespace }}/*, allow
                  - description: '{{ request.object.metadata.namespace }} project developer access'
                    groups:
                      - APC-D-{{ to_upper(request.object.metadata.namespace) }}-DEV
                    name: developer
                    policies:
                      - p, proj:{{ request.object.metadata.namespace }}:developer, applications, get, {{ request.object.metadata.namespace }}/*, allow
                  - description: '{{ request.object.metadata.namespace }} project operator access'
                    groups:
                      - APC-D-{{ to_upper(request.object.metadata.namespace) }}-OPR
                    name: operator
                    policies:
                      - p, proj:{{ request.object.metadata.namespace }}:operator, repositories, *, {{ request.object.metadata.namespace }}/https://gitlab.example.com/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:operator, applications, get, {{ request.object.metadata.namespace }}/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:operator, applications, sync, {{ request.object.metadata.namespace }}/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:operator, clusters, get, https://kubernetes.default.svc, allow
                      - p, proj:{{ request.object.metadata.namespace }}:operator, exec, create, {{ request.object.metadata.namespace }}/*, allow
                      - p, proj:{{ request.object.metadata.namespace }}:operator, logs, get, {{ request.object.metadata.namespace }}/*, allow
                sourceNamespaces:
                  - '{{ request.object.metadata.namespace }}'
                sourceRepos:
                  - https://gitlab.example.com/*
            generateExisting: true
            kind: AppProject
            name: '{{ request.object.metadata.namespace }}'
            namespace: apc-gitops
            orphanDownstreamOnPolicyDelete: true
            synchronize: true
          match:
            any:
              - resources:
                  kinds:
                    - argoproj.io/*/Application
                  namespaceSelector:
                    matchLabels:
                      apc.namespace.type: application
          name: generate-argocd-appproject
          preconditions:
            all:
              - key: '{{ request.object.metadata.name }}'
                operator: Equals
                value: '{{ request.object.metadata.namespace }}'
        - generate:
            apiVersion: v1
            data:
              metadata:
                ownerReferences:
                  - apiVersion: '{{request.object.apiVersion}}'
                    kind: '{{request.object.kind}}'
                    name: '{{request.object.metadata.name}}'
                    uid: '{{request.object.metadata.uid}}'
            generateExisting: true
            kind: ServiceAccount
            name: application-gitops
            namespace: '{{ request.object.metadata.namespace }}'
            orphanDownstreamOnPolicyDelete: true
            synchronize: false
          match:
            any:
              - resources:
                  kinds:
                    - argoproj.io/*/Application
                  namespaceSelector:
                    matchLabels:
                      apc.namespace.type: application
          name: generate-argocd-serviceaccount
          preconditions:
            all:
              - key: '{{ request.object.metadata.name }}'
                operator: Equals
                value: '{{ request.object.metadata.namespace }}'
        - generate:
            apiVersion: rbac.authorization.k8s.io/v1
            data:
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: apc-project-admin
              subjects:
                - kind: ServiceAccount
                  name: application-gitops
                  namespace: '{{ request.object.metadata.namespace }}'
            generateExisting: true
            kind: RoleBinding
            name: application-gitops
            namespace: '{{ request.object.metadata.namespace }}'
            orphanDownstreamOnPolicyDelete: true
            synchronize: true
          match:
            any:
              - resources:
                  kinds:
                    - argoproj.io/*/Application
                  namespaceSelector:
                    matchLabels:
                      apc.namespace.type: application
          name: generate-argocd-rolebinding
          preconditions:
            all:
              - key: '{{ request.object.metadata.name }}'
                operator: Equals
                value: '{{ request.object.metadata.namespace }}'
      validationFailureAction: Audit
  2: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.kyverno.io/aggregate-to-admission-controller: "true"
      name: kyverno:admission-controller:application-gitops
    rules:
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - rolebindings
        verbs:
          - get
      - apiGroups:
          - monitoring.coreos.com
        resources:
          - prometheusrules
        verbs:
          - get
          - list
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        rbac.kyverno.io/aggregate-to-background-controller: "true"
      name: kyverno:background-controller:application-gitops
    rules:
      - apiGroups:
          - ""
        resources:
          - serviceaccounts
        verbs:
          - create
          - delete
          - get
          - update
      - apiGroups:
          - argoproj.io
        resources:
          - appprojects
        verbs:
          - create
          - delete
          - get
          - update
