manifests should match snapshot:
  1: |
    apiVersion: kubernetes.vault.upbound.io/v1alpha1
    kind: AuthBackendRole
    metadata:
      name: test01-cert-manager
    spec:
      forProvider:
        audience: vault://vault-hub-issuer
        backend: kubernetes
        boundServiceAccountNames:
          - cert-manager
        boundServiceAccountNamespaces:
          - cert-manager
        roleName: cert-manager
        tokenPolicies:
          - default
          - test01--cert-manager
        tokenTtl: 3600
      providerConfigRef:
        name: vault.apps.hub01.cloud.socpoist.sk
  2: |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: wildcard-apps-test01-cert
      namespace: openshift-ingress
    spec:
      commonName: apps.ocpdemo-spoke1.lab.gr8it.cloud
      dnsNames:
        - asterisk.apps.ocpdemo-spoke1.lab.gr8it.cloud
      issuerRef:
        kind: ClusterIssuer
        name: vault-hub-issuer
      secretName: wildcard-apps-test01-cert
  3: |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      labels:
        app.kubernetes.io/instance: cert-manager-config
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager-config
        helm.sh/chart: cert-manager-config-1.1.0
      name: vault-hub-issuer
    spec:
      vault:
        auth:
          kubernetes:
            mountPath: /v1/auth/kubernetes
            role: cert-manager
            serviceAccountRef:
              audiences:
                - https://kubernetes.default.svc
              name: cert-manager
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZlRENDQTJDZ0F3SUJBZ0lRT3dkZ0ZHR2xZcnBFTTJEWTFHTm1lekFOQmdrcWhraUc5dzBCQVFzRkFEQkQKTVJJd0VBWUtDWkltaVpQeUxHUUJHUllDYzJzeEdEQVdCZ29Ka2lhSmsvSXNaQUVaRmdoemIyTndiMmx6ZERFVApNQkVHQTFVRUF4TUtVbTl2ZEVOQkxWTndNakFnRncweE5qQXlNREl3T1RVeE5UTmFHQTh5TURVMk1ESXdNakV3Ck1ERTBObG93UXpFU01CQUdDZ21TSm9tVDhpeGtBUmtXQW5Ock1SZ3dGZ1lLQ1pJbWlaUHlMR1FCR1JZSWMyOWoKY0c5cGMzUXhFekFSQmdOVkJBTVRDbEp2YjNSRFFTMVRjREl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQwpEd0F3Z2dJS0FvSUNBUUNmaVhUWWMxMjhNbHRUZXZHODFUUk9CTGswbmxlSUN2dnoyU0toUDRVbTJ2R21ITWt5Cis3RG43Y3ZTZjlHNnlZM1g4bXUyZ1cwMTh1c0xyTWpHYnpnSlZCWnIyQy8yWkhTZW9mNUZtU3VaM0dVVzJEVk4KbnQ0VUh5ZG5GOGdsTjJ5bzNPRHlvZjEvK0hKbjVqRjdDSnZESlF2UEk1WHZCM3NXRGRJRzZ5V0pMUjNxc0V2MAo0cnZqREZXWVdWT09ZYi93ODZQcmxCMWpldytCTGlpN08yeGxmQUF0TmJQRUZrQ0VCSGxXbTNMc3k5aXhJcGFHCjVKTk50N2F1aVhMS3hPdnJlRzNUVUlZeCthVlg0bEVWeFFRL3dhaEJFSDBkMGVkemd0a2xnaFdja0ZpK25zU1MKSHlNWnBWKy9jQ2RsbVJsUlhQMU1wTi9TaW1OOUFQMG83K2NQaHpwV3M3c09PMkFEbTV0cExvaDF2TTllNERtWQpjT3hRMnAvRzBKM0Y3MG5sU2NwSHdSbGZqdHIxaWFTNmtydE1GR2JhZ3dZcldtaXZOaVMxNEx2Z1lBL1llWXpsCmpjTkdENnlLYUxYU0kyTzc4NkxueXRCZUJIcEsyMkYxT2M0K1hCYTQ0aFdkRVpqdktDc2hTSm00M21KQ09QSVAKNG5VYVpQaG9mbEJZa3ArcUFqRXVHRDdpa2lqSjJOWDNpS1pTVWUxU2d3VUk5YXNJb2FySXI3QXNPL0FRVUppSgpMa1JzaXdJTFEzd0JhME52bmhsWlUwbWNIVm1JTXorU0lpbFRMeDJkaGV5enJqUnZ1OTZiaVoveTczVTE3MWFjCjVWQmNTa1BDa29PWlR1YUdQSTZSdG9YdEl5cFNkL3VobFMvcllrY1JXYkt4bWxvL2xqMTZ1ejdyd1FJREFRQUIKbzJZd1pEQVRCZ2tyQmdFRUFZSTNGQUlFQmg0RUFFTUFRVEFMQmdOVkhROEVCQU1DQVlZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVVdER0NVFjTXdQZ05iM2NhOWNQTVZ1UERvTjR3RUFZSkt3WUJCQUdDCk54VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFBeFNMdTlpNTY0emdvZlNheVZOdm04UGVSQngKbyt3R2dKVFFYbWlob3Fvd04weCtuaWVvcTF6QlVSR2JZczZ5WXRySzlwcDJ4OWdPbzc2YTVIZ1QvV2owMmFSMQplMlVNUFZNU2swTEVybWNWR216aU1GZm54dGtjd1JSVkZwOVlVeXNVMkpWT0lqMXFOWWdyQnBoN2JHSzNBWnd2CktHeE5OVFdTbXJXTnlBYng2TEdSSTM5Sk1sejAxMm5SSzdYT1N3bXcwTWg4OW56VVJJQU1mcE9MQjB0b2JaTUQKbDgvSjM3WkF0ZUlEbFEzN0VkSTBqTkgweUNhUjFBa1NsdWdWSUFXZTdlZDdKMFBReFJOcU9zQnFaWnQwbGx0cgpMeVhaOG9seWN1a0tFVU84SE5tQ3FJdHR3M1dwcGk0L3dYZlNQOXlUZHArMzZveVZtZkxWc3JQUzYza0RpakdMCnFIdHlKWm1aQUlzNjdGY3d6QXFlK2VZMENBaWF4N3IvTkpMZVlyMTdtUjk2L0ZlTjdSNS9uMFpMK2ljbUV0RXAKN0ppQXpXL3BBWjFSc1RhRHVQc1JWUnlXZWhBRk9ZL2ZLSm1vVWtMT1JRZ1JoL2o3RHNXR3VBcHVMQitDdEJnYQpDMVJ2alNWZ1Y0YjN3TTVLTEp5Yzhha3RoS1VvTXpjTU12Znp0SWpwNGlaQWtES1NmUWNGTUw5TFBaaWpvYmU5CkVHazJmU1YxUmNETGdxaXcrRjB2SzMyVzhEN25jeE5oTkhla2N1U2p4cVJ4b01XNkZVK01KMFpRRWFMaEhBTGQKZUJoVi9OTzVGYzNqN1gwU29zamE3ckpCcHZvTjA3YjdXNHY4TnhtaTY4NW53L1FoM25WV1ZVM01OVGVCZEIxQwpJZGlBUENBWW9xNG1oUk5lCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZlRENDQTJDZ0F3SUJBZ0lRT3dkZ0ZHR2xZcnBFTTJEWTFHTm1lekFOQmdrcWhraUc5dzBCQVFzRkFEQkQKTVJJd0VBWUtDWkltaVpQeUxHUUJHUllDYzJzeEdEQVdCZ29Ka2lhSmsvSXNaQUVaRmdoemIyTndiMmx6ZERFVApNQkVHQTFVRUF4TUtVbTl2ZEVOQkxWTndNakFnRncweE5qQXlNREl3T1RVeE5UTmFHQTh5TURVMk1ESXdNakV3Ck1ERTBObG93UXpFU01CQUdDZ21TSm9tVDhpeGtBUmtXQW5Ock1SZ3dGZ1lLQ1pJbWlaUHlMR1FCR1JZSWMyOWoKY0c5cGMzUXhFekFSQmdOVkJBTVRDbEp2YjNSRFFTMVRjREl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQwpEd0F3Z2dJS0FvSUNBUUNmaVhUWWMxMjhNbHRUZXZHODFUUk9CTGswbmxlSUN2dnoyU0toUDRVbTJ2R21ITWt5Cis3RG43Y3ZTZjlHNnlZM1g4bXUyZ1cwMTh1c0xyTWpHYnpnSlZCWnIyQy8yWkhTZW9mNUZtU3VaM0dVVzJEVk4KbnQ0VUh5ZG5GOGdsTjJ5bzNPRHlvZjEvK0hKbjVqRjdDSnZESlF2UEk1WHZCM3NXRGRJRzZ5V0pMUjNxc0V2MAo0cnZqREZXWVdWT09ZYi93ODZQcmxCMWpldytCTGlpN08yeGxmQUF0TmJQRUZrQ0VCSGxXbTNMc3k5aXhJcGFHCjVKTk50N2F1aVhMS3hPdnJlRzNUVUlZeCthVlg0bEVWeFFRL3dhaEJFSDBkMGVkemd0a2xnaFdja0ZpK25zU1MKSHlNWnBWKy9jQ2RsbVJsUlhQMU1wTi9TaW1OOUFQMG83K2NQaHpwV3M3c09PMkFEbTV0cExvaDF2TTllNERtWQpjT3hRMnAvRzBKM0Y3MG5sU2NwSHdSbGZqdHIxaWFTNmtydE1GR2JhZ3dZcldtaXZOaVMxNEx2Z1lBL1llWXpsCmpjTkdENnlLYUxYU0kyTzc4NkxueXRCZUJIcEsyMkYxT2M0K1hCYTQ0aFdkRVpqdktDc2hTSm00M21KQ09QSVAKNG5VYVpQaG9mbEJZa3ArcUFqRXVHRDdpa2lqSjJOWDNpS1pTVWUxU2d3VUk5YXNJb2FySXI3QXNPL0FRVUppSgpMa1JzaXdJTFEzd0JhME52bmhsWlUwbWNIVm1JTXorU0lpbFRMeDJkaGV5enJqUnZ1OTZiaVoveTczVTE3MWFjCjVWQmNTa1BDa29PWlR1YUdQSTZSdG9YdEl5cFNkL3VobFMvcllrY1JXYkt4bWxvL2xqMTZ1ejdyd1FJREFRQUIKbzJZd1pEQVRCZ2tyQmdFRUFZSTNGQUlFQmg0RUFFTUFRVEFMQmdOVkhROEVCQU1DQVlZd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVVdER0NVFjTXdQZ05iM2NhOWNQTVZ1UERvTjR3RUFZSkt3WUJCQUdDCk54VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFBeFNMdTlpNTY0emdvZlNheVZOdm04UGVSQngKbyt3R2dKVFFYbWlob3Fvd04weCtuaWVvcTF6QlVSR2JZczZ5WXRySzlwcDJ4OWdPbzc2YTVIZ1QvV2owMmFSMQplMlVNUFZNU2swTEVybWNWR216aU1GZm54dGtjd1JSVkZwOVlVeXNVMkpWT0lqMXFOWWdyQnBoN2JHSzNBWnd2CktHeE5OVFdTbXJXTnlBYng2TEdSSTM5Sk1sejAxMm5SSzdYT1N3bXcwTWg4OW56VVJJQU1mcE9MQjB0b2JaTUQKbDgvSjM3WkF0ZUlEbFEzN0VkSTBqTkgweUNhUjFBa1NsdWdWSUFXZTdlZDdKMFBReFJOcU9zQnFaWnQwbGx0cgpMeVhaOG9seWN1a0tFVU84SE5tQ3FJdHR3M1dwcGk0L3dYZlNQOXlUZHArMzZveVZtZkxWc3JQUzYza0RpakdMCnFIdHlKWm1aQUlzNjdGY3d6QXFlK2VZMENBaWF4N3IvTkpMZVlyMTdtUjk2L0ZlTjdSNS9uMFpMK2ljbUV0RXAKN0ppQXpXL3BBWjFSc1RhRHVQc1JWUnlXZWhBRk9ZL2ZLSm1vVWtMT1JRZ1JoL2o3RHNXR3VBcHVMQitDdEJnYQpDMVJ2alNWZ1Y0YjN3TTVLTEp5Yzhha3RoS1VvTXpjTU12Znp0SWpwNGlaQWtES1NmUWNGTUw5TFBaaWpvYmU5CkVHazJmU1YxUmNETGdxaXcrRjB2SzMyVzhEN25jeE5oTkhla2N1U2p4cVJ4b01XNkZVK01KMFpRRWFMaEhBTGQKZUJoVi9OTzVGYzNqN1gwU29zamE3ckpCcHZvTjA3YjdXNHY4TnhtaTY4NW53L1FoM25WV1ZVM01OVGVCZEIxQwpJZGlBUENBWW9xNG1oUk5lCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
        path: pki-int-gr8it.cloud/sign/lab.gr8it.cloud
        server: https://vault.apps.hub01.cloud.socpoist.sk
  4: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: cert-manager-config
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager-config
        helm.sh/chart: cert-manager-config-1.1.0
      name: cert-manager-config-auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: cert-manager
        namespace: cert-manager
  5: |
    apiVersion: vault.vault.upbound.io/v1alpha1
    kind: Policy
    metadata:
      name: test01--cert-manager
    spec:
      forProvider:
        name: test01--cert-manager
        policy: |2
          path "pki-int-gr8it.cloud/sign/lab.gr8it.cloud" {
            capabilities = ["create", "update"]
          }

          path "pki-int-gr8it.cloud/issue/lab.gr8it.cloud" {
            capabilities = ["create", "update"]
          }
      providerConfigRef:
        name: vault.apps.hub01.cloud.socpoist.sk
  6: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: cert-manager-config-token-creator
      namespace: cert-manager
    rules:
      - apiGroups:
          - ""
        resourceNames:
          - cert-manager
        resources:
          - serviceaccounts/token
        verbs:
          - create
  7: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: cert-manager-config-cert-manager
      namespace: cert-manager
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: cert-manager-config-token-create
    subjects:
      - kind: ServiceAccount
        name: cert-manager
        namespace: cert-manager
