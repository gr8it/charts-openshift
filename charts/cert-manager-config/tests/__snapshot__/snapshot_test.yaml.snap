manifests should match snapshot:
  1: |
    apiVersion: kubernetes.vault.upbound.io/v1alpha1
    kind: AuthBackendRole
    metadata:
      name: test01-cert-manager
    spec:
      forProvider:
        audience: vault://vault-hub-issuer
        backend: kubernetes
        boundServiceAccountNames:
          - cert-manager
        boundServiceAccountNamespaces:
          - cert-manager
        roleName: cert-manager
        tokenPolicies:
          - default
          - test01--cert-manager
        tokenTtl: 3600
      providerConfigRef:
        name: vault.apps.hub01.cloud.socpoist.sk
  2: |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: wildcard-apps-test01-cert
      namespace: openshift-ingress
    spec:
      commonName: apps.ocpdemo-spoke1.lab.gr8it.cloud
      dnsNames:
        - asterisk.apps.ocpdemo-spoke1.lab.gr8it.cloud
      issuerRef:
        kind: ClusterIssuer
        name: vault-hub-issuer
      secretName: wildcard-apps-test01-cert
  3: |
    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      labels:
        app.kubernetes.io/instance: cert-manager-config
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager-config
        helm.sh/chart: cert-manager-config-1.1.0
      name: vault-hub-issuer
    spec:
      vault:
        auth:
          kubernetes:
            mountPath: /v1/auth/kubernetes
            role: cert-manager
            serviceAccountRef:
              audiences:
                - https://kubernetes.default.svc
              name: cert-manager
        caBundle: cm9vdC1jYS5jcnQ6IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlGZURDQ0EyQ2dBd0lCQWdJUU93ZGdGR0dsWXJwRU0yRFkxR05tZXpBTkJna3Foa2lHOXcwQkFRc0ZBREJECiAgTVJJd0VBWUtDWkltaVpQeUxHUUJHUllDYzJzeEdEQVdCZ29Ka2lhSmsvSXNaQUVaRmdoemIyTndiMmx6ZERFVAogIE1CRUdBMVVFQXhNS1VtOXZkRU5CTFZOd01qQWdGdzB4TmpBeU1ESXdPVFV4TlROYUdBOHlNRFUyTURJd01qRXcKICBNREUwTmxvd1F6RVNNQkFHQ2dtU0pvbVQ4aXhrQVJrV0FuTnJNUmd3RmdZS0NaSW1pWlB5TEdRQkdSWUljMjlqCiAgY0c5cGMzUXhFekFSQmdOVkJBTVRDbEp2YjNSRFFTMVRjREl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQwogIER3QXdnZ0lLQW9JQ0FRQ2ZpWFRZYzEyOE1sdFRldkc4MVRST0JMazBubGVJQ3Z2ejJTS2hQNFVtMnZHbUhNa3kKICArN0RuN2N2U2Y5RzZ5WTNYOG11MmdXMDE4dXNMck1qR2J6Z0pWQlpyMkMvMlpIU2VvZjVGbVN1WjNHVVcyRFZOCiAgbnQ0VUh5ZG5GOGdsTjJ5bzNPRHlvZjEvK0hKbjVqRjdDSnZESlF2UEk1WHZCM3NXRGRJRzZ5V0pMUjNxc0V2MAogIDRydmpERldZV1ZPT1liL3c4NlBybEIxamV3K0JMaWk3TzJ4bGZBQXROYlBFRmtDRUJIbFdtM0xzeTlpeElwYUcKICA1Sk5OdDdhdWlYTEt4T3ZyZUczVFVJWXgrYVZYNGxFVnhRUS93YWhCRUgwZDBlZHpndGtsZ2hXY2tGaStuc1NTCiAgSHlNWnBWKy9jQ2RsbVJsUlhQMU1wTi9TaW1OOUFQMG83K2NQaHpwV3M3c09PMkFEbTV0cExvaDF2TTllNERtWQogIGNPeFEycC9HMEozRjcwbmxTY3BId1JsZmp0cjFpYVM2a3J0TUZHYmFnd1lyV21pdk5pUzE0THZnWUEvWWVZemwKICBqY05HRDZ5S2FMWFNJMk83ODZMbnl0QmVCSHBLMjJGMU9jNCtYQmE0NGhXZEVaanZLQ3NoU0ptNDNtSkNPUElQCiAgNG5VYVpQaG9mbEJZa3ArcUFqRXVHRDdpa2lqSjJOWDNpS1pTVWUxU2d3VUk5YXNJb2FySXI3QXNPL0FRVUppSgogIExrUnNpd0lMUTN3QmEwTnZuaGxaVTBtY0hWbUlNeitTSWlsVEx4MmRoZXl6cmpSdnU5NmJpWi95NzNVMTcxYWMKICA1VkJjU2tQQ2tvT1pUdWFHUEk2UnRvWHRJeXBTZC91aGxTL3JZa2NSV2JLeG1sby9sajE2dXo3cndRSURBUUFCCiAgbzJZd1pEQVRCZ2tyQmdFRUFZSTNGQUlFQmg0RUFFTUFRVEFMQmdOVkhROEVCQU1DQVlZd0R3WURWUjBUQVFILwogIEJBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVV0RHQ1UWNNd1BnTmIzY2E5Y1BNVnVQRG9ONHdFQVlKS3dZQkJBR0MKICBOeFVCQkFNQ0FRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBQXhTTHU5aTU2NHpnb2ZTYXlWTnZtOFBlUkJ4CiAgbyt3R2dKVFFYbWlob3Fvd04weCtuaWVvcTF6QlVSR2JZczZ5WXRySzlwcDJ4OWdPbzc2YTVIZ1QvV2owMmFSMQogIGUyVU1QVk1TazBMRXJtY1ZHbXppTUZmbnh0a2N3UlJWRnA5WVV5c1UySlZPSWoxcU5ZZ3JCcGg3YkdLM0Fad3YKICBLR3hOTlRXU21yV055QWJ4NkxHUkkzOUpNbHowMTJuUks3WE9Td213ME1oODluelVSSUFNZnBPTEIwdG9iWk1ECiAgbDgvSjM3WkF0ZUlEbFEzN0VkSTBqTkgweUNhUjFBa1NsdWdWSUFXZTdlZDdKMFBReFJOcU9zQnFaWnQwbGx0cgogIEx5WFo4b2x5Y3VrS0VVTzhITm1DcUl0dHczV3BwaTQvd1hmU1A5eVRkcCszNm95Vm1mTFZzclBTNjNrRGlqR0wKICBxSHR5SlptWkFJczY3RmN3ekFxZStlWTBDQWlheDdyL05KTGVZcjE3bVI5Ni9GZU43UjUvbjBaTCtpY21FdEVwCiAgN0ppQXpXL3BBWjFSc1RhRHVQc1JWUnlXZWhBRk9ZL2ZLSm1vVWtMT1JRZ1JoL2o3RHNXR3VBcHVMQitDdEJnYQogIEMxUnZqU1ZnVjRiM3dNNUtMSnljOGFrdGhLVW9NemNNTXZmenRJanA0aVpBa0RLU2ZRY0ZNTDlMUFppam9iZTkKICBFR2syZlNWMVJjRExncWl3K0YwdkszMlc4RDduY3hOaE5IZWtjdVNqeHFSeG9NVzZGVStNSjBaUUVhTGhIQUxkCiAgZUJoVi9OTzVGYzNqN1gwU29zamE3ckpCcHZvTjA3YjdXNHY4TnhtaTY4NW53L1FoM25WV1ZVM01OVGVCZEIxQwogIElkaUFQQ0FZb3E0bWhSTmUKICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCnJvb3QtY2EyLmNydDogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUZlRENDQTJDZ0F3SUJBZ0lRT3dkZ0ZHR2xZcnBFTTJEWTFHTm1lekFOQmdrcWhraUc5dzBCQVFzRkFEQkQKICBNUkl3RUFZS0NaSW1pWlB5TEdRQkdSWUNjMnN4R0RBV0Jnb0praWFKay9Jc1pBRVpGZ2h6YjJOd2IybHpkREVUCiAgTUJFR0ExVUVBeE1LVW05dmRFTkJMVk53TWpBZ0Z3MHhOakF5TURJd09UVXhOVE5hR0E4eU1EVTJNREl3TWpFdwogIE1ERTBObG93UXpFU01CQUdDZ21TSm9tVDhpeGtBUmtXQW5Ock1SZ3dGZ1lLQ1pJbWlaUHlMR1FCR1JZSWMyOWoKICBjRzlwYzNReEV6QVJCZ05WQkFNVENsSnZiM1JEUVMxVGNESXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDCiAgRHdBd2dnSUtBb0lDQVFDZmlYVFljMTI4TWx0VGV2RzgxVFJPQkxrMG5sZUlDdnZ6MlNLaFA0VW0ydkdtSE1reQogICs3RG43Y3ZTZjlHNnlZM1g4bXUyZ1cwMTh1c0xyTWpHYnpnSlZCWnIyQy8yWkhTZW9mNUZtU3VaM0dVVzJEVk4KICBudDRVSHlkbkY4Z2xOMnlvM09EeW9mMS8rSEpuNWpGN0NKdkRKUXZQSTVYdkIzc1dEZElHNnlXSkxSM3FzRXYwCiAgNHJ2akRGV1lXVk9PWWIvdzg2UHJsQjFqZXcrQkxpaTdPMnhsZkFBdE5iUEVGa0NFQkhsV20zTHN5OWl4SXBhRwogIDVKTk50N2F1aVhMS3hPdnJlRzNUVUlZeCthVlg0bEVWeFFRL3dhaEJFSDBkMGVkemd0a2xnaFdja0ZpK25zU1MKICBIeU1acFYrL2NDZGxtUmxSWFAxTXBOL1NpbU45QVAwbzcrY1BoenBXczdzT08yQURtNXRwTG9oMXZNOWU0RG1ZCiAgY094UTJwL0cwSjNGNzBubFNjcEh3UmxmanRyMWlhUzZrcnRNRkdiYWd3WXJXbWl2TmlTMTRMdmdZQS9ZZVl6bAogIGpjTkdENnlLYUxYU0kyTzc4NkxueXRCZUJIcEsyMkYxT2M0K1hCYTQ0aFdkRVpqdktDc2hTSm00M21KQ09QSVAKICA0blVhWlBob2ZsQllrcCtxQWpFdUdEN2lraWpKMk5YM2lLWlNVZTFTZ3dVSTlhc0lvYXJJcjdBc08vQVFVSmlKCiAgTGtSc2l3SUxRM3dCYTBOdm5obFpVMG1jSFZtSU16K1NJaWxUTHgyZGhleXpyalJ2dTk2YmlaL3k3M1UxNzFhYwogIDVWQmNTa1BDa29PWlR1YUdQSTZSdG9YdEl5cFNkL3VobFMvcllrY1JXYkt4bWxvL2xqMTZ1ejdyd1FJREFRQUIKICBvMll3WkRBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQUxCZ05WSFE4RUJBTUNBWVl3RHdZRFZSMFRBUUgvCiAgQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVVXREdDVRY013UGdOYjNjYTljUE1WdVBEb040d0VBWUpLd1lCQkFHQwogIE54VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFBeFNMdTlpNTY0emdvZlNheVZOdm04UGVSQngKICBvK3dHZ0pUUVhtaWhvcW93TjB4K25pZW9xMXpCVVJHYllzNnlZdHJLOXBwMng5Z09vNzZhNUhnVC9XajAyYVIxCiAgZTJVTVBWTVNrMExFcm1jVkdtemlNRmZueHRrY3dSUlZGcDlZVXlzVTJKVk9JajFxTllnckJwaDdiR0szQVp3dgogIEtHeE5OVFdTbXJXTnlBYng2TEdSSTM5Sk1sejAxMm5SSzdYT1N3bXcwTWg4OW56VVJJQU1mcE9MQjB0b2JaTUQKICBsOC9KMzdaQXRlSURsUTM3RWRJMGpOSDB5Q2FSMUFrU2x1Z1ZJQVdlN2VkN0owUFF4Uk5xT3NCcVpadDBsbHRyCiAgTHlYWjhvbHljdWtLRVVPOEhObUNxSXR0dzNXcHBpNC93WGZTUDl5VGRwKzM2b3lWbWZMVnNyUFM2M2tEaWpHTAogIHFIdHlKWm1aQUlzNjdGY3d6QXFlK2VZMENBaWF4N3IvTkpMZVlyMTdtUjk2L0ZlTjdSNS9uMFpMK2ljbUV0RXAKICA3SmlBelcvcEFaMVJzVGFEdVBzUlZSeVdlaEFGT1kvZktKbW9Va0xPUlFnUmgvajdEc1dHdUFwdUxCK0N0QmdhCiAgQzFSdmpTVmdWNGIzd001S0xKeWM4YWt0aEtVb016Y01NdmZ6dElqcDRpWkFrREtTZlFjRk1MOUxQWmlqb2JlOQogIEVHazJmU1YxUmNETGdxaXcrRjB2SzMyVzhEN25jeE5oTkhla2N1U2p4cVJ4b01XNkZVK01KMFpRRWFMaEhBTGQKICBlQmhWL05PNUZjM2o3WDBTb3NqYTdySkJwdm9OMDdiN1c0djhOeG1pNjg1bncvUWgzblZXVlUzTU5UZUJkQjFDCiAgSWRpQVBDQVlvcTRtaFJOZQogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
        path: pki-int-gr8it.cloud/sign/lab.gr8it.cloud
        server: https://vault.apps.hub01.cloud.socpoist.sk
  4: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/instance: cert-manager-config
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager-config
        helm.sh/chart: cert-manager-config-1.1.0
      name: cert-manager-config-auth-delegator
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: system:auth-delegator
    subjects:
      - kind: ServiceAccount
        name: cert-manager
        namespace: cert-manager
  5: |
    apiVersion: vault.vault.upbound.io/v1alpha1
    kind: Policy
    metadata:
      name: test01--cert-manager
    spec:
      forProvider:
        name: test01--cert-manager
        policy: |2
          path "pki-int-gr8it.cloud/sign/lab.gr8it.cloud" {
            capabilities = ["create", "update"]
          }

          path "pki-int-gr8it.cloud/issue/lab.gr8it.cloud" {
            capabilities = ["create", "update"]
          }
      providerConfigRef:
        name: vault.apps.hub01.cloud.socpoist.sk
  6: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: cert-manager-config-token-creator
      namespace: cert-manager
    rules:
      - apiGroups:
          - ""
        resourceNames:
          - cert-manager
        resources:
          - serviceaccounts/token
        verbs:
          - create
  7: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: cert-manager-config-cert-manager
      namespace: cert-manager
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: cert-manager-config-token-create
    subjects:
      - kind: ServiceAccount
        name: cert-manager
        namespace: cert-manager
