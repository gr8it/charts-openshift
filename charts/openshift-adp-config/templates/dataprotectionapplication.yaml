apiVersion: oadp.openshift.io/v1alpha1
kind: DataProtectionApplication
metadata:
  name: {{ .Values.dpa.name }}
  namespace: {{ .Values.targetNamespace }}
  labels:
    {{- include "openshift-adp-config.labels" . | nindent 4 }}
{{- $cluster := tpl (include "apc-global-overrides.clusterName" .) $ }}
{{- $locationDefaults := list
  (dict "name" (printf "oadp-%s-app-backup" $cluster) "bucket" (printf "oadp-%s-app-backup" $cluster) "prefix" (printf "backup/%s-app" $cluster) "default" true)
  (dict "name" (printf "oadp-%s-app-restore" $cluster) "bucket" (printf "oadp-%s-app-restore" $cluster) "prefix" (printf "backup/%s-app" $cluster) "default" false)
}}
{{- $providedLocations := .Values.dpa.backupLocations | default (list) }}
{{- $backupTargetDefault := printf "oadp-%s-app-backup-cloud-credentials" $cluster }}
{{- $restoreTargetDefault := printf "oadp-%s-app-restore-cloud-credentials" $cluster }}
spec:
  backupLocations:
  {{- range $index, $defaults := $locationDefaults }}
  {{- $override := dict }}
  {{- if lt $index (len $providedLocations) }}
    {{- $override = index $providedLocations $index }}
  {{- end }}
  {{- $combined := merge (dict) $defaults $override }}
  {{- $locationName := tpl (default "" (index $combined "name")) $ }}
  {{- if eq $locationName "" }}
    {{- $locationName = index $defaults "name" }}
  {{- end }}
  {{- $isDefault := index $combined "default" }}
  {{- if eq (printf "%v" $isDefault) "" }}
    {{- $isDefault = index $defaults "default" }}
  {{- end }}
  {{- $bucket := tpl (default "" (index $combined "bucket")) $ }}
  {{- if eq $bucket "" }}
    {{- $bucket = index $defaults "bucket" }}
  {{- end }}
  {{- if $isDefault }}
    {{- $explicitBucket := tpl (default "" $.Values.objectBucketClaims.backup.bucketName) $ }}
    {{- if ne $explicitBucket "" }}
      {{- $bucket = $explicitBucket }}
    {{- end }}
  {{- else }}
    {{- $explicitBucket := tpl (default "" $.Values.objectBucketClaims.restore.bucketName) $ }}
    {{- if ne $explicitBucket "" }}
      {{- $bucket = $explicitBucket }}
    {{- end }}
  {{- end }}
  {{- $prefix := tpl (default "" (index $combined "prefix")) $ }}
  {{- if eq $prefix "" }}
    {{- $prefix = index $defaults "prefix" }}
  {{- end }}
  {{- $targetName := "" }}
  {{- if $isDefault }}
    {{- $targetName = tpl (default $backupTargetDefault (default "" $.Values.credentials.backup.targetName)) $ }}
  {{- else }}
    {{- $targetName = tpl (default $restoreTargetDefault (default "" $.Values.credentials.restore.targetName)) $ }}
  {{- end }}
  - name: {{ $locationName }}
    velero:
      accessMode: ReadWrite
      config:
        insecureSkipTLSVerify: {{ $.Values.dpa.s3.insecureSkipTLSVerify | quote }}
        profile: default
        region: {{ $.Values.dpa.s3.region }}
        s3ForcePathStyle: {{ $.Values.dpa.s3.forcePathStyle | quote }}
        s3Url: {{ $.Values.dpa.s3.url }}
      credential:
        key: cloud
        name: {{ $targetName }}
      default: {{ $isDefault }}
      objectStorage:
        bucket: {{ $bucket }}
        caCert: {{ $.Values.dpa.s3.caCert }}
        prefix: {{ $prefix }}
      provider: aws
  {{- end }}
  configuration:
    nodeAgent:
      enable: {{ .Values.dpa.nodeAgent.enabled }}
      podConfig:
        resourceAllocations:
          limits:
            cpu: {{ .Values.dpa.nodeAgent.resourceAllocations.limits.cpu | quote }}
            memory: {{ .Values.dpa.nodeAgent.resourceAllocations.limits.memory }}
          requests:
            cpu: {{ .Values.dpa.nodeAgent.resourceAllocations.requests.cpu | quote }}
            memory: {{ .Values.dpa.nodeAgent.resourceAllocations.requests.memory }}
      uploaderType: {{ .Values.dpa.nodeAgent.uploaderType }}
    velero:
      defaultPlugins:
      {{- range .Values.dpa.velero.defaultPlugins }}
      - {{ . }}
  {{- end }}
      defaultSnapshotMoveData: {{ .Values.dpa.velero.defaultSnapshotMoveData }}
      defaultVolumesToFSBackup: {{ .Values.dpa.velero.defaultVolumesToFSBackup }}
      resourceTimeout: {{ .Values.dpa.velero.resourceTimeout }}
