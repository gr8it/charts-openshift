{{- if .Values.kyverno.enabled }}
{{- /* compute names with safe defaults */ -}}
{{- $cluster := include "apc-global-overrides.clusterName" . }}

{{- $sourceNs := default "apc-backup" .Values.sourceNamespace -}}
{{- $targetNs := default "openshift-adp" .Values.targetNamespace -}}

{{- $backupSourceDefault := printf "oadp-%s-app-backup" $cluster -}}
{{- $backupTargetDefault := printf "oadp-%s-app-backup-cloud-credentials" $cluster -}}
{{- $restoreSourceDefault := printf "oadp-%s-app-restore" $cluster -}}
{{- $restoreTargetDefault := printf "oadp-%s-app-restore-cloud-credentials" $cluster -}}

{{- $bucketOverrides := dict "backup" "" "restore" "" }}
{{- $dpaLocations := .Values.dpa.backupLocations | default (list) }}
{{- if gt (len $dpaLocations) 0 }}
  {{- $candidate := default "" (index (index $dpaLocations 0) "bucket") -}}
  {{- if ne (printf "%v" $candidate) "" -}}
    {{- $_ := set $bucketOverrides "backup" (tpl (printf "%v" $candidate) $) -}}
  {{- end -}}
{{- end -}}
{{- if gt (len $dpaLocations) 1 }}
  {{- $candidate := default "" (index (index $dpaLocations 1) "bucket") -}}
  {{- if ne (printf "%v" $candidate) "" -}}
    {{- $_ := set $bucketOverrides "restore" (tpl (printf "%v" $candidate) $) -}}
  {{- end -}}
{{- end -}}
{{- with .Values.objectBucketClaims }}
  {{- with .backup -}}
    {{- $candidate := tpl (default "" .bucketName) $ -}}
    {{- if and (ne $candidate "") (eq (index $bucketOverrides "backup") "") -}}
      {{- $_ := set $bucketOverrides "backup" $candidate -}}
    {{- end -}}
  {{- end -}}
  {{- with .restore -}}
    {{- $candidate := tpl (default "" .bucketName) $ -}}
    {{- if and (ne $candidate "") (eq (index $bucketOverrides "restore") "") -}}
      {{- $_ := set $bucketOverrides "restore" $candidate -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{- $backupBucketOverride := index $bucketOverrides "backup" }}
{{- $restoreBucketOverride := index $bucketOverrides "restore" }}

{{- $credentials := .Values.credentials | default dict }}
{{- $backupCreds := get $credentials "backup" | default dict }}
{{- $restoreCreds := get $credentials "restore" | default dict }}
{{- $backupSourceName := default $backupSourceDefault (default "" $backupCreds.sourceName) }}
{{- $backupTargetName := default $backupTargetDefault (default "" $backupCreds.targetName) }}
{{- if and (ne $backupBucketOverride "") (eq $backupSourceName $backupSourceDefault) -}}
  {{- $backupSourceName = $backupBucketOverride -}}
{{- end -}}
{{- if and (ne $backupBucketOverride "") (eq $backupTargetName $backupTargetDefault) -}}
  {{- $backupTargetName = $backupBucketOverride -}}
{{- end -}}
{{- $restoreSourceName := default $restoreSourceDefault (default "" $restoreCreds.sourceName) }}
{{- $restoreTargetName := default $restoreTargetDefault (default "" $restoreCreds.targetName) }}
{{- if and (ne $restoreBucketOverride "") (eq $restoreSourceName $restoreSourceDefault) -}}
  {{- $restoreSourceName = $restoreBucketOverride -}}
{{- end -}}
{{- if and (ne $restoreBucketOverride "") (eq $restoreTargetName $restoreTargetDefault) -}}
  {{- $restoreTargetName = $restoreBucketOverride -}}
{{- end -}}

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ include "apc-global-overrides.fullname" . }}-oadp-cloud-credentials
  labels:
    {{ include "apc-global-overrides.labels" . | nindent 4 }}
    {{- with .Chart }}
    helm.sh/chart: {{ .Name }}-{{ .Version | replace "+" "_" }}
    {{- end }}
spec:
  background: true
  rules:
    - name: transform-backup-secret
      skipBackgroundRequests: {{ default false .Values.kyverno.skipBackgroundRequests }}
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ $sourceNs }}"]
              names: ["{{ $backupSourceName }}"]
      generate:
        apiVersion: v1
        kind: Secret
        name: "{{ $backupTargetName }}"
        namespace: "{{ $targetNs }}"
        generateExisting: {{ default true .Values.kyverno.generateExisting }}
        synchronize: {{ default true .Values.kyverno.synchronize }}
        orphanDownstreamOnPolicyDelete: {{ default true .Values.kyverno.orphanDownstreamOnPolicyDelete }}
        data:
          metadata:
            labels:
              {{- include "apc-global-overrides.labels" . | nindent 14 }}
              {{- if .Values.dpa.name }}
              dataprotectionapplication.name: "{{ .Values.dpa.name }}"
              {{- end }}
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ "{{" }} base64_decode(request.object.data.AWS_ACCESS_KEY_ID || '') {{ "}}" }}"
              aws_secret_access_key: "{{ "{{" }} base64_decode(request.object.data.AWS_SECRET_ACCESS_KEY || '') {{ "}}" }}"

    - name: transform-restore-secret
      skipBackgroundRequests: {{ default false .Values.kyverno.skipBackgroundRequests }}
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ $sourceNs }}"]
              names: ["{{ $restoreSourceName }}"]
      generate:
        apiVersion: v1
        kind: Secret
        name: "{{ $restoreTargetName }}"
        namespace: "{{ $targetNs }}"
        generateExisting: {{ default true .Values.kyverno.generateExisting }}
        synchronize: {{ default true .Values.kyverno.synchronize }}
        orphanDownstreamOnPolicyDelete: {{ default true .Values.kyverno.orphanDownstreamOnPolicyDelete }}
        data:
          metadata:
            labels:
              {{- include "apc-global-overrides.labels" . | nindent 14 }}
              {{- if .Values.dpa.name }}
              dataprotectionapplication.name: "{{ .Values.dpa.name }}"
              {{- end }}
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ "{{" }} base64_decode(request.object.data.AWS_ACCESS_KEY_ID || '') {{ "}}" }}"
              aws_secret_access_key: "{{ "{{" }} base64_decode(request.object.data.AWS_SECRET_ACCESS_KEY || '') {{ "}}" }}"
{{- end }}
