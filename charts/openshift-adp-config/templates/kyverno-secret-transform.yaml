{{- if .Values.kyverno.enabled }}
{{- /* Kyverno/JMESPath snippets as literal strings so Helm doesn't parse them */ -}}
{{- $hasAccessKey := "{{`{{ has(request.object.data, 'AWS_ACCESS_KEY_ID') }}`}}" -}}
{{- $hasSecretKey := "{{`{{ has(request.object.data, 'AWS_SECRET_ACCESS_KEY') }}`}}" -}}
{{- $reqAccessKey := "{{`{{ request.object.data.AWS_ACCESS_KEY_ID }}`}}" -}}
{{- $reqSecretKey := "{{`{{ request.object.data.AWS_SECRET_ACCESS_KEY }}`}}" -}}
{{- $awsAccessKeyIdExpr := "{{`{{ base64_decode(request.object.data.AWS_ACCESS_KEY_ID || '') }}`}}" -}}
{{- $awsSecretAccessKeyExpr := "{{`{{ base64_decode(request.object.data.AWS_SECRET_ACCESS_KEY || '') }}`}}" -}}

{{- /* Compute names with sensible defaults */ -}}
{{- $cluster := include "apc-global-overrides.clusterName" . -}}
{{- $backupSourceDefault := printf "oadp-%s-app-backup-kytest" $cluster -}}
{{- $backupTargetDefault := printf "oadp-%s-app-backup-cloud-credentials-kytest" $cluster -}}
{{- $restoreSourceDefault := printf "oadp-%s-app-restore-kytest" $cluster -}}
{{- $restoreTargetDefault := printf "oadp-%s-app-restore-cloud-credentials-kytest" $cluster -}}

{{- $backupSourceName := default $backupSourceDefault (default "" .Values.credentials.backup.sourceName) -}}
{{- $backupTargetName := default $backupTargetDefault (default "" .Values.credentials.backup.targetName) -}}
{{- $restoreSourceName := default $restoreSourceDefault (default "" .Values.credentials.restore.sourceName) -}}
{{- $restoreTargetName := default $restoreTargetDefault (default "" .Values.credentials.restore.targetName) -}}

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ include "apc-global-overrides.fullname" . }}-oadp-cloud-credentials
  labels:
    {{- include "apc-global-overrides.labels" . | nindent 4 }}
spec:
  background: true
  rules:
    # -------------------- BACKUP --------------------
    - name: transform-backup-secret
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ .Values.sourceNamespace }}"]
              names: ["{{ $backupSourceName }}"]
      preconditions:
        all:
          - key: "{{ $hasAccessKey }}"
            operator: Equals
            value: true
          - key: "{{ $hasSecretKey }}"
            operator: Equals
            value: true
          - key: "{{ $reqAccessKey }}"
            operator: NotEquals
            value: ""
          - key: "{{ $reqSecretKey }}"
            operator: NotEquals
            value: ""
      generate:
        apiVersion: v1
        kind: Secret
        name: "{{ $backupTargetName }}"
        namespace: "{{ .Values.targetNamespace }}"
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        data:
          metadata:
            labels:
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccessKeyIdExpr }}"
              aws_secret_access_key: "{{ $awsSecretAccessKeyExpr }}"

    # -------------------- RESTORE --------------------
    - name: transform-restore-secret
      skipBackgroundRequests: true
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ .Values.sourceNamespace }}"]
              names: ["{{ $restoreSourceName }}"]
      preconditions:
        all:
          - key: "{{ $hasAccessKey }}"
            operator: Equals
            value: true
          - key: "{{ $hasSecretKey }}"
            operator: Equals
            value: true
          - key: "{{ $reqAccessKey }}"
            operator: NotEquals
            value: ""
          - key: "{{ $reqSecretKey }}"
            operator: NotEquals
            value: ""
      generate:
        apiVersion: v1
        kind: Secret
        name: "{{ $restoreTargetName }}"
        namespace: "{{ .Values.targetNamespace }}"
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        data:
          metadata:
            labels:
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccessKeyIdExpr }}"
              aws_secret_access_key: "{{ $awsSecretAccessKeyExpr }}"
{{- end }}
