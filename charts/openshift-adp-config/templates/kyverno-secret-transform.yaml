{{- if .Values.kyverno.enabled }}
{{- /* keep Kyverno exprs as plain strings so Helm doesn't parse them */ -}}
{{- $awsAccess := "{{ base64_decode(request.object.data.AWS_ACCESS_KEY_ID || '') }}" -}}
{{- $awsSecret := "{{ base64_decode(request.object.data.AWS_SECRET_ACCESS_KEY || '') }}" -}}

apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ include "apc-global-overrides.fullname" . }}-oadp-cloud-credentials
spec:
  background: true
  rules:
    - name: transform-backup-secret
      skipBackgroundRequests: false
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ .Values.sourceNamespace }}"]
              names: ["{{ .Values.credentials.backup.sourceName }}"]
      generate:
        apiVersion: v1
        kind: Secret
        name: {{ .Values.credentials.backup.targetName }}
        namespace: {{ .Values.targetNamespace }}
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        data:
          metadata:
            labels:
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccess }}"
              aws_secret_access_key: "{{ $awsSecret }}"

    - name: transform-restore-secret
      skipBackgroundRequests: false
      match:
        any:
          - resources:
              kinds: ["Secret"]
              namespaces: ["{{ .Values.sourceNamespace }}"]
              names: ["{{ .Values.credentials.restore.sourceName }}"]
      generate:
        apiVersion: v1
        kind: Secret
        name: {{ .Values.credentials.restore.targetName }}
        namespace: {{ .Values.targetNamespace }}
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        data:
          metadata:
            labels:
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccess }}"
              aws_secret_access_key: "{{ $awsSecret }}"
{{- end }}
