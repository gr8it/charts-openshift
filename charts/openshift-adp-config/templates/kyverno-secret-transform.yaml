{{- if .Values.kyverno.enabled }}
{{- $awsAccessKeyIdExpr := printf "{{ base64_decode('{{ request.object.data.AWS_ACCESS_KEY_ID }}') }}" -}}
{{- $awsSecretAccessKeyExpr := printf "{{ base64_decode('{{ request.object.data.AWS_SECRET_ACCESS_KEY }}') }}" -}}
{{- $cluster := tpl (include "apc-global-overrides.clusterName" .) $ }}
{{- $backupSourceDefault := printf "oadp-%s-app-backup" $cluster }}
{{- $backupTargetDefault := printf "oadp-%s-app-backup-cloud-credentials" $cluster }}
{{- $restoreSourceDefault := printf "oadp-%s-app-restore" $cluster }}
{{- $restoreTargetDefault := printf "oadp-%s-app-restore-cloud-credentials" $cluster }}
{{- $backupSourceName := tpl (default $backupSourceDefault (default "" .Values.credentials.backup.sourceName)) $ }}
{{- $backupTargetName := tpl (default $backupTargetDefault (default "" .Values.credentials.backup.targetName)) $ }}
{{- $restoreSourceName := tpl (default $restoreSourceDefault (default "" .Values.credentials.restore.sourceName)) $ }}
{{- $restoreTargetName := tpl (default $restoreTargetDefault (default "" .Values.credentials.restore.targetName)) $ }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ include "apc-global-overrides.fullname" . }}-oadp-cloud-credentials
  labels:
    {{- include "apc-global-overrides.labels" . | nindent 4 }}
spec:
  background: true
  rules:
    - name: transform-backup-secret
      match:
        any:
          - resources:
              kinds:
                - Secret
              namespaces:
                - {{ .Values.sourceNamespace }}
              names:
                - {{ $backupSourceName }}
      preconditions:
        all:
          - key: "{{ `{{ has(request.object.data, 'AWS_ACCESS_KEY_ID') }}` }}"
            operator: Equals
            value: true
          - key: "{{ `{{ has(request.object.data, 'AWS_SECRET_ACCESS_KEY') }}` }}"
            operator: Equals
            value: true
          - key: "{{ `{{ request.object.data.AWS_ACCESS_KEY_ID }}` }}"
            operator: NotEquals
            value: ""
          - key: "{{ `{{ request.object.data.AWS_SECRET_ACCESS_KEY }}` }}"
            operator: NotEquals
            value: ""
      generate:
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        apiVersion: v1
        kind: Secret
        name: {{ $backupTargetName }}
        namespace: {{ .Values.targetNamespace }}
        data:
          metadata:
            labels:
              {{- include "apc-global-overrides.labels" . | nindent 14 }}
              dataprotectionapplication.name: {{ .Values.dpa.name }}
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccessKeyIdExpr }}"
              aws_secret_access_key: "{{ $awsSecretAccessKeyExpr }}"
    - name: transform-restore-secret
      match:
        any:
          - resources:
              kinds:
                - Secret
              namespaces:
                - {{ .Values.sourceNamespace }}
              names:
                - {{ $restoreSourceName }}
      preconditions:
        all:
          - key: "{{ `{{ has(request.object.data, 'AWS_ACCESS_KEY_ID') }}` }}"
            operator: Equals
            value: true
          - key: "{{ `{{ has(request.object.data, 'AWS_SECRET_ACCESS_KEY') }}` }}"
            operator: Equals
            value: true
          - key: "{{ `{{ request.object.data.AWS_ACCESS_KEY_ID }}` }}"
            operator: NotEquals
            value: ""
          - key: "{{ `{{ request.object.data.AWS_SECRET_ACCESS_KEY }}` }}"
            operator: NotEquals
            value: ""
      generate:
        generateExisting: true
        synchronize: true
        orphanDownstreamOnPolicyDelete: true
        apiVersion: v1
        kind: Secret
        name: {{ $restoreTargetName }}
        namespace: {{ .Values.targetNamespace }}
        data:
          metadata:
            labels:
              {{- include "apc-global-overrides.labels" . | nindent 14 }}
              dataprotectionapplication.name: {{ .Values.dpa.name }}
              openshift.io/oadp: "true"
          type: Opaque
          stringData:
            cloud: |
              [default]
              aws_access_key_id: "{{ $awsAccessKeyIdExpr }}"
              aws_secret_access_key: "{{ $awsSecretAccessKeyExpr }}"
{{- end }}
